<h2>Login</h2>
<hr />

@if (TempData["Msg"] != null)
{
    <div class="alert alert-danger" role="alert">@TempData["Msg"]</div>
}
@if (TempData["Msg2"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["Msg2"]</div>
}

<form method="post">
    <div class="input-group">
        <div class="input-group-prepend">
            <div class="input-group-text" id="btnGroupAddon">User Name</div>
        </div>
        <input type="text" class="form-control @(ViewData.ModelState["Uname"]?.Errors.Count > 0 ? "is-invalid" : (ViewData.ModelState.ContainsKey("Uname") ? "is-valid" : ""))" name="Uname" value="@Model.Uname" placeholder="Type User Name" aria-label="Input group example" aria-describedby="btnGroupAddon">
    </div>
    <small id="nameHelpBlock" class="form-text text-muted">
        User Name must be 7-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
    </small>
    <br />
    <div class="input-group">
        <div class="input-group-prepend">
            <div class="input-group-text" id="btnGroupAddon">Passowrd&nbsp;&nbsp;&nbsp;</div>
        </div>
        <input type="password" class="form-control @(ViewData.ModelState["Password"]?.Errors.Count > 0 ? "is-invalid" : (ViewData.ModelState.ContainsKey("Password") ? "is-valid" : ""))" name="Password" placeholder="Type Password" aria-label="Input group example" aria-describedby="btnGroupAddon">
    </div>
    <small id="passwordHelpBlock" class="form-text text-muted">
        User Password must at least 8 characters long, must contain one special char., one number, one uppercase letter.
    </small>
    <br />
    <input type="submit" value="Login" class="btn btn-success" />
</form>